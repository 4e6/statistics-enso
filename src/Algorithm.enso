from Base import all

import Statistics.Number.Extensions

## Permutation of r objects in set of n objects.
permutations : Integer -> Integer -> Number
permutations n r = n.factorial / (n-r).factorial

## Combination of r objects in set of n objects.
combinations : Integer -> Integer -> Number
combinations n r = here.permutations n r / r.factorial

## Binomial distribution.

   * `x` - the number of succeses.
   * `n` - the total number of trials.
   * `p` - the probability of success of 1 trial.
binomial : Integer -> Integer -> Number -> Number
binomial x n p = (here.combinations n x) * (p ** x) * ((1-p) ** (n-x))


## Negative binomial distribution.
negative_binomial : Integer -> Integer -> Number -> Number
negative_binomial x n p = (here.combinations n-1 x-1) * (p ** x) * ((1-p) ** (n-x))

## Geometric distribution.

   * `x` - the number of succeses.
   * `n` - the total number of trials.
   * `p` - the probability of success of 1 trial.
geometric : Integer -> Integer -> Number -> Number
geometric x n p = ((1-p) ** (n-x)) * p

## Poisson distribution.

   * `k` is the actual number of successes that occur in a specified region.
   * `l` is the average number of successes that occur in a specified region.
poisson : Integer -> Number -> Number
poisson k l = ((l ** k)) * (exp -l) / k.factorial
